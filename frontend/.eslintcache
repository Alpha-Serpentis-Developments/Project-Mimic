[{"/Users/yimeng/projects/testing/Project-Mimic/frontend/src/App.tsx":"1","/Users/yimeng/projects/testing/Project-Mimic/frontend/src/index.tsx":"2","/Users/yimeng/projects/testing/Project-Mimic/frontend/src/components/MMconnection.tsx":"3","/Users/yimeng/projects/testing/Project-Mimic/frontend/src/components/VaultContract.tsx":"4","/Users/yimeng/projects/testing/Project-Mimic/frontend/src/components/SSTrader.tsx":"5","/Users/yimeng/projects/testing/Project-Mimic/frontend/src/components/Follower.tsx":"6","/Users/yimeng/projects/testing/Project-Mimic/frontend/src/components/NoMMModal.tsx":"7"},{"size":3915,"mtime":1622137885229,"results":"8","hashOfConfig":"9"},{"size":244,"mtime":1621979428857,"results":"10","hashOfConfig":"9"},{"size":2332,"mtime":1622103253965,"results":"11","hashOfConfig":"9"},{"size":95,"mtime":1622073903073,"results":"12","hashOfConfig":"9"},{"size":2960,"mtime":1622093492786,"results":"13","hashOfConfig":"9"},{"size":5609,"mtime":1622137992460,"results":"14","hashOfConfig":"9"},{"size":449,"mtime":1622065710300,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"f0j0od",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/yimeng/projects/testing/Project-Mimic/frontend/src/App.tsx",["36","37","38"],"import React, { useState } from \"react\";\nimport MMConnect from \"./components/MMconnection\";\nimport VaultContract from \"./components/VaultContract\";\nimport SSTrader from \"./components/SSTrader\";\nimport Follower from \"./components/Follower\";\nimport \"./app.css\";\n\n// this is the temporary vault contract\n\nexport interface VaultContract {\n  writeCalls: (a: number) => void;\n  sellCalls: (b: number) => void;\n  settleVault: (c: number) => void;\n  deposit: (d: number) => void;\n  withdraw: (e: number) => void;\n}\n\nexport default function App() {\n  let ttSupply: string = JSON.parse(\n    localStorage.getItem(\"totalSupply\") || \"{}\"\n  );\n  console.log(ttSupply);\n  let ttSupplyNum = parseInt(ttSupply);\n  const [totalSupply, setTotalSupply] = useState<number>(0);\n  const [showDeposit, setShowDeposit] = useState<boolean>(false);\n\n  const [dAmt, setDAmt] = useState<number>(0);\n  const [wAmt, setWAmt] = useState<number>(0);\n  const [tempPlaceHolder, setTempPlaceHolder] = useState<VaultContract>();\n  const [validateDInput, setValidateDInput] = useState<boolean>(false);\n  const [validateWInput, setValidateWInput] = useState<boolean>(false);\n\n  const [vaultToken, setVaultToken] = useState<number>(15);\n  const [eBal, setEBal] = useState<number>(5);\n\n  function onClickSupply(e: any) {\n    setTotalSupply(totalSupply + 1);\n    localStorage.setItem(\"totalSupply\", JSON.stringify(totalSupply));\n    setShowDeposit(true);\n  }\n\n  function clickReduceSupply() {\n    setTotalSupply(totalSupply - 1);\n    if (totalSupply === 0) {\n      setTotalSupply(0);\n      setShowDeposit(false);\n    }\n  }\n\n  function onClickD(event: any) {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidateDInput(true);\n    setTotalSupply(totalSupply + dAmt);\n    setVaultToken(vaultToken + dAmt);\n    setEBal(eBal - dAmt);\n\n    tempPlaceHolder?.deposit(dAmt);\n  }\n  function onClickW(event: any) {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidateWInput(true);\n    setTotalSupply(totalSupply - wAmt);\n    setVaultToken(vaultToken - wAmt);\n    setEBal(eBal + wAmt);\n    tempPlaceHolder?.deposit(dAmt);\n    tempPlaceHolder?.withdraw(wAmt);\n  }\n  function handleChangeD(e: any) {\n    setDAmt(\n      e.target.type === \"number\" ? parseInt(e.target.value) : e.target.value\n    );\n    if (e.target.value < 0) {\n      setValidateDInput(true);\n    }\n  }\n\n  function handleChangeW(e: any) {\n    setWAmt(\n      e.target.type === \"number\" ? parseInt(e.target.value) : e.target.value\n    );\n    if (e.target.value < 0) {\n      setValidateWInput(true);\n    }\n  }\n\n  return (\n    <div>\n      <MMConnect />\n      <div className=\"content\">\n        <div>\n          <VaultContract />\n        </div>\n        <div>\n          <SSTrader totalSupply={totalSupply} />\n          {showDeposit && (\n            <div>\n              Total Supply:{\" \"}\n              <span className=\"totalSupp\" onClick={clickReduceSupply}>\n                {totalSupply}\n              </span>\n            </div>\n          )}\n          {!showDeposit && (\n            <div className=\"initialize\" onClick={onClickSupply}>\n              Initialize\n            </div>\n          )}\n        </div>\n        <div>\n          {\" \"}\n          <Follower\n            totalSupply={totalSupply}\n            showDeposit={showDeposit}\n            onClickD={onClickD}\n            onClickW={onClickW}\n            handleChangeD={handleChangeD}\n            handleChangeW={handleChangeW}\n            validateDInput={validateDInput}\n            validateWInput={validateWInput}\n            dAmt={dAmt}\n            wAmt={wAmt}\n            vaultToken={vaultToken}\n            eBal={eBal}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n",["39","40"],"/Users/yimeng/projects/testing/Project-Mimic/frontend/src/index.tsx",[],"/Users/yimeng/projects/testing/Project-Mimic/frontend/src/components/MMconnection.tsx",["41","42","43"],"import React, { useState, useEffect } from \"react\";\nimport NoMMModal from \"./NoMMModal\";\nimport Web3 from \"web3\";\n\nimport \"../style/mmConnect.css\";\n\nlet web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nexport default function MMconnect() {\n  let addr: string = JSON.parse(localStorage.getItem(\"account\") || \"{}\");\n  console.log(addr);\n  if (addr) {\n    const fFive = addr.slice(0, 10);\n    const lFive = addr.slice(-8);\n    addr = `${fFive}...${lFive}`;\n  }\n  const [hasMM, setHasMM] = useState<boolean>(false);\n  const [btnText, setBtnText] = useState<string>(\"Connect MetaMask\");\n  const [acctNum, setAcctNum] = useState<string>(addr);\n  const [chainId, setChainId] = useState<number>();\n  const [ethBal, setEthBal] = useState<number>();\n  const [openModal, setOpenModal] = useState<boolean>(false);\n\n  // check if the meta mask is installed when the page load\n  useEffect(() => {\n    if (acctNum) {\n      setBtnText(addr);\n    }\n    hasMMInstall();\n  }, []);\n\n  // check if meta mask is installed\n  async function hasMMInstall() {\n    if (web3 !== null) {\n      await setHasMM(true);\n      console.log(hasMM);\n\n      return;\n    }\n  }\n  // if metamask is install, connect the metamask\n  // if not installed, show modal=> this part of the function not working currently\n  async function connectMM(e: any) {\n    if (!hasMM) {\n      console.log(\"at here\");\n      setOpenModal(true);\n\n      alert(\"You must install MetaMask first\");\n    } else {\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n      const account: string = accounts[0];\n      const fFive = account.slice(0, 10);\n      const lFive = account.slice(-8);\n      const wAddress = `${fFive}...${lFive}`;\n      setAcctNum(account);\n      setBtnText(wAddress);\n      const chain_Id = await web3.eth.getChainId();\n      const weiBal = await web3.eth.getBalance(account);\n      const ethBal = parseInt(weiBal) / 1000000000000000000;\n      console.log(ethBal);\n      setChainId(chain_Id);\n      setEthBal(ethBal);\n      localStorage.setItem(\"account\", JSON.stringify(account));\n    }\n  }\n\n  function closeModal() {\n    setOpenModal(false);\n  }\n\n  return (\n    <div>\n      <div className=\"mmbtn\" onClick={connectMM}>\n        <p>{btnText}</p>\n      </div>\n      {openModal && <NoMMModal onClick={closeModal} />}\n    </div>\n  );\n}\n","/Users/yimeng/projects/testing/Project-Mimic/frontend/src/components/VaultContract.tsx",[],"/Users/yimeng/projects/testing/Project-Mimic/frontend/src/components/SSTrader.tsx",["44","45","46","47","48","49"],"import React, { useState } from \"react\";\nimport Contract from \"web3-eth-contract\";\nimport { VaultContract } from \"../App\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../style/trade.css\";\n\n// set provider for all later instances to use\n\nexport default function SSTrader(props: { totalSupply: number }) {\n  const [dAmt, setDAmt] = useState<number>(1);\n  const [wAmt, setWAmt] = useState<number>(1);\n  const [tempPlaceHolder, setTempPlaceHolder] = useState<VaultContract>();\n  const [validateInput, setValidateInput] = useState<boolean>(false);\n\n  function onClickD(event: any) {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false || dAmt < 0 || wAmt < 0) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidateInput(true);\n    tempPlaceHolder?.deposit(dAmt);\n  }\n  function onClickW(event: any) {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false || dAmt < 0 || wAmt < 0) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidateInput(true);\n    tempPlaceHolder?.deposit(dAmt);\n    tempPlaceHolder?.withdraw(wAmt);\n  }\n  function handleChangeD(e: any) {\n    setDAmt(e.target.value);\n    if (e.target.value < 0) {\n      setValidateInput(true);\n    }\n  }\n\n  return (\n    <div>\n      <div>Social Trader</div>\n\n      <Form noValidate validated={validateInput} onSubmit={onClickW}>\n        <Form.Row>\n          <Form.Group controlId=\"validationCustom03\">\n            <Form.Label>Sell Calls</Form.Label>\n            <Form.Control type=\"number\" placeholder=\"Amount\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide number bigger than 0\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n      <Form noValidate validated={validateInput} onSubmit={onClickW}>\n        <Form.Row>\n          <Form.Group controlId=\"validationCustom04\">\n            <Form.Label>write calls</Form.Label>\n            <Form.Control type=\"number\" placeholder=\"Amount\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide number bigger than 0\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n      <Form noValidate validated={validateInput} onSubmit={onClickW}>\n        <Form.Row>\n          <Form.Group controlId=\"validationCustom05\">\n            <Form.Label>Settle Vault</Form.Label>\n            <Form.Control type=\"number\" placeholder=\"Amount\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide number bigger than 0\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </div>\n  );\n}\n","/Users/yimeng/projects/testing/Project-Mimic/frontend/src/components/Follower.tsx",["50","51","52","53","54","55"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { VaultContract } from \"../App\";\nimport Web3 from \"web3\";\n\nlet web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nexport default function Follower(props: {\n  totalSupply: number;\n  showDeposit: boolean;\n  onClickD: any;\n  onClickW: any;\n  handleChangeD: any;\n  handleChangeW: any;\n  validateDInput: boolean;\n  validateWInput: boolean;\n  dAmt: number;\n  wAmt: number;\n  vaultToken: number;\n  eBal: number;\n}) {\n  // const [dAmt, setDAmt] = useState<number>(1);\n  // const [wAmt, setWAmt] = useState<number>(1);\n  // const [tempPlaceHolder, setTempPlaceHolder] = useState<VaultContract>();\n  // const [validateDInput, setValidateDInput] = useState<boolean>(false);\n  // const [validateWInput, setValidateWInput] = useState<boolean>(false);\n\n  const [hasMM, setHasMM] = useState<boolean>(false);\n  const [btnText, setBtnText] = useState<string>(\"Connect MetaMask\");\n  const [btnDisable, setBtnDisable] = useState<boolean>(false);\n  const [acctNum, setAcctNum] = useState<string>(\"\");\n  const [chainId, setChainId] = useState<number>(0);\n  const [ethBal, setEthBal] = useState<number>(0);\n\n  // check if the meta mask is installed when the page load\n  useEffect(() => {\n    hasMMInstall();\n  }, []);\n\n  // check if meta mask is installed\n  async function hasMMInstall() {\n    if (web3 !== null) {\n      await setHasMM(true);\n      console.log(hasMM);\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n      const account: string = accounts[0];\n      const fFive = account.slice(0, 10);\n      const lFive = account.slice(-8);\n      const wAddress = `${fFive}...${lFive}`;\n      setBtnDisable(true);\n      setAcctNum(account);\n      setBtnText(wAddress);\n      console.log(web3.eth);\n      const chain_Id = await web3.eth.getChainId();\n      const weiBal = await web3.eth.getBalance(account);\n      const ethBal = parseInt(weiBal) / 1000000000000000000;\n      console.log(ethBal);\n      setChainId(chain_Id);\n      setEthBal(ethBal);\n      return;\n    }\n  }\n\n  // function onClickD(event: any) {\n  //   const form = event.currentTarget;\n  //   if (form.checkValidity() === false) {\n  //     event.preventDefault();\n  //     event.stopPropagation();\n  //   }\n\n  //   setValidateDInput(true);\n  //   tempPlaceHolder?.deposit(dAmt);\n  // }\n  // function onClickW(event: any) {\n  //   const form = event.currentTarget;\n  //   if (form.checkValidity() === false) {\n  //     event.preventDefault();\n  //     event.stopPropagation();\n  //   }\n\n  //   setValidateWInput(true);\n  //   tempPlaceHolder?.deposit(dAmt);\n  //   tempPlaceHolder?.withdraw(wAmt);\n  // }\n  // function handleChangeD(e: any) {\n  //   setDAmt(e.target.value);\n  //   console.log(ethBal - e.target.value);\n  //   if (e.target.value < 0 || e.target.value > ethBal) {\n  //     setValidateDInput(true);\n  //   }\n  // }\n\n  // function handleChangeW(event: any) {\n  //   setDAmt(event.target.value);\n  //   if (event.target.value < 0) {\n  //     setValidateWInput(true);\n  //   }\n  // }\n\n  return (\n    <div>\n      <div>Followers</div>\n      <div>\n        {props.showDeposit && (\n          <Form\n            noValidate\n            validated={props.validateDInput}\n            onSubmit={props.onClickD}\n          >\n            <Form.Row>\n              <Form.Group controlId=\"validationCustom04\">\n                <Form.Label>Deposit</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Amt, in eth\"\n                  onChange={props.handleChangeD}\n                  min=\"0\"\n                  // value={props.wAmt}\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a valid value\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Button\n              type=\"submit\"\n              disabled={props.dAmt < 0 || props.eBal - props.dAmt < 0}\n            >\n              Submit\n            </Button>\n          </Form>\n        )}\n        <Form\n          noValidate\n          validated={props.validateWInput}\n          onSubmit={props.onClickW}\n        >\n          <Form.Row>\n            <Form.Group controlId=\"validationCustom05\">\n              <Form.Label>Withdaw</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Amt,in Vault Token\"\n                onChange={props.handleChangeW}\n                min=\"0\"\n                required\n                // value={props.wAmt}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a valid value\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Button\n            type=\"submit\"\n            disabled={\n              props.wAmt < 0 ||\n              props.totalSupply - props.wAmt < 0 ||\n              props.vaultToken - props.wAmt < 0\n            }\n          >\n            Submit\n          </Button>\n        </Form>\n      </div>\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Header>Account Detail</Card.Header>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>Chain ID: {chainId}</ListGroup.Item>\n          <ListGroup.Item>Eth: {props.eBal}</ListGroup.Item>\n          <ListGroup.Item>Vault Token: {props.vaultToken}</ListGroup.Item>\n        </ListGroup>\n      </Card>\n    </div>\n  );\n}\n","/Users/yimeng/projects/testing/Project-Mimic/frontend/src/components/NoMMModal.tsx",[],["56","57"],{"ruleId":"58","severity":1,"message":"59","line":10,"column":18,"nodeType":"60","messageId":"61","endLine":10,"endColumn":31},{"ruleId":"62","severity":1,"message":"63","line":23,"column":7,"nodeType":"60","messageId":"64","endLine":23,"endColumn":18},{"ruleId":"62","severity":1,"message":"65","line":29,"column":27,"nodeType":"60","messageId":"64","endLine":29,"endColumn":45},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"62","severity":1,"message":"70","line":20,"column":10,"nodeType":"60","messageId":"64","endLine":20,"endColumn":17},{"ruleId":"62","severity":1,"message":"71","line":21,"column":10,"nodeType":"60","messageId":"64","endLine":21,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":30,"column":6,"nodeType":"74","endLine":30,"endColumn":8,"suggestions":"75"},{"ruleId":"62","severity":1,"message":"76","line":2,"column":8,"nodeType":"60","messageId":"64","endLine":2,"endColumn":16},{"ruleId":"62","severity":1,"message":"77","line":5,"column":8,"nodeType":"60","messageId":"64","endLine":5,"endColumn":18},{"ruleId":"62","severity":1,"message":"78","line":13,"column":16,"nodeType":"60","messageId":"64","endLine":13,"endColumn":23},{"ruleId":"62","severity":1,"message":"65","line":14,"column":27,"nodeType":"60","messageId":"64","endLine":14,"endColumn":45},{"ruleId":"62","severity":1,"message":"79","line":17,"column":12,"nodeType":"60","messageId":"64","endLine":17,"endColumn":20},{"ruleId":"62","severity":1,"message":"80","line":38,"column":12,"nodeType":"60","messageId":"64","endLine":38,"endColumn":25},{"ruleId":"62","severity":1,"message":"81","line":6,"column":10,"nodeType":"60","messageId":"64","endLine":6,"endColumn":23},{"ruleId":"62","severity":1,"message":"82","line":32,"column":10,"nodeType":"60","messageId":"64","endLine":32,"endColumn":17},{"ruleId":"62","severity":1,"message":"83","line":33,"column":10,"nodeType":"60","messageId":"64","endLine":33,"endColumn":20},{"ruleId":"62","severity":1,"message":"84","line":34,"column":10,"nodeType":"60","messageId":"64","endLine":34,"endColumn":17},{"ruleId":"62","severity":1,"message":"71","line":36,"column":10,"nodeType":"60","messageId":"64","endLine":36,"endColumn":16},{"ruleId":"72","severity":1,"message":"85","line":41,"column":6,"nodeType":"74","endLine":41,"endColumn":8,"suggestions":"86"},{"ruleId":"66","replacedBy":"87"},{"ruleId":"68","replacedBy":"88"},"@typescript-eslint/no-redeclare","'VaultContract' is already defined.","Identifier","redeclared","@typescript-eslint/no-unused-vars","'ttSupplyNum' is assigned a value but never used.","unusedVar","'setTempPlaceHolder' is assigned a value but never used.","no-native-reassign",["89"],"no-negated-in-lhs",["90"],"'chainId' is assigned a value but never used.","'ethBal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'acctNum', 'addr', and 'hasMMInstall'. Either include them or remove the dependency array.","ArrayExpression",["91"],"'Contract' is defined but never used.","'InputGroup' is defined but never used.","'setWAmt' is assigned a value but never used.","'onClickD' is defined but never used.","'handleChangeD' is defined but never used.","'VaultContract' is defined but never used.","'btnText' is assigned a value but never used.","'btnDisable' is assigned a value but never used.","'acctNum' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hasMMInstall'. Either include it or remove the dependency array.",["92"],["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [acctNum, addr, hasMMInstall]",{"range":"97","text":"98"},"Update the dependencies array to be: [hasMMInstall]",{"range":"99","text":"100"},[973,975],"[acctNum, addr, hasMMInstall]",[1442,1444],"[hasMMInstall]"]